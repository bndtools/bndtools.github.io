



<div class="row main-container">
	<div class="large-12 medium-4 small-4 columns">
		<hr style="margin-top: 20px" />
	</div>
</div>
<div class="row main-container">
    <div class="large-3 medium-4 small-4 columns">
        <img src="/images/favicon.ico">
    </div>
    <div class="large-6 medium-4 small-4 columns">
    </div>
    <div class="large-3 medium-4 small-4 columns">
        <p style="text-align:right">
        <a href="https://github.com/bndtools/bndtools.github.io/edit/master/{{page.path}}"><svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"></path></svg></a>
        </p>
    </div>
</div>

<script src="/js/jquery-3.7.1.min.js"></script>
<script src="/js/foundation.min.js"></script>

<script>
    $( document ).ready(function() {
        $(document).foundation();
    });

// copy to clipboard buttons

const copyButtonLabel = "Copy Code";

// use a class selector if available
// TODO only java for now. maybe more later
let blocks = document.querySelectorAll(".language-java");

blocks.forEach((block) => {
  // only add button if browser supports Clipboard API
  if (navigator.clipboard) {
    let button = document.createElement("button");
    button.classList.add("copycodebtn");
    
    button.innerText = copyButtonLabel;
    block.appendChild(button);

    button.addEventListener("click", async () => {
      await copyCode(block, button);
    });
    
  }
});

async function copyCode(block, button) {
  let code = block.querySelector("code");
  let text = code.innerText;

  await navigator.clipboard.writeText(text);

  button.innerText = "Code Copied";

    setTimeout(()=> {
        button.innerText = copyButtonLabel;
    },2000)
}


document.addEventListener('DOMContentLoaded', () => {
  const headers = document.querySelectorAll('h1[id], h2[id], h3[id], h4[id]');

  headers.forEach(header => {
    const iconLink = document.createElement('a');
    iconLink.href = `#${header.id}`;
    iconLink.innerHTML = '#';
    iconLink.className = 'header-link';

    // Wrap the icon inside a span to control visibility with CSS
    const wrapper = document.createElement('span');
    wrapper.className = 'header-link-wrapper';
    wrapper.appendChild(iconLink);

    // Append the wrapper to the header
    header.appendChild(wrapper);
  });
});

</script>
